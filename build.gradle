plugins {
    id 'groovy'
    id 'groovy-gradle-plugin'
    id 'maven-publish'

    id 'me.qoomon.git-versioning' version '5.2.0'
    id 'com.gradle.plugin-publish' version '0.12.0'
    id 'org.cadixdev.licenser' version '0.6.1'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

group = 'org.minecraftplus.gradle'
description = 'ProPatcher is a Gradle plugin for creating .patch files on the go.'

version = '0.0.0-SNAPSHOT'
gitVersioning.apply {
    refs {
        considerTagsOnBranches = true
        tag('v?(?<version>.*)') {
            version = '${ref.version}'
        }
        branch('development') {
            version = '${describe.tag}.${describe.distance}'
        }
        branch('.*') {
            version = '${describe.tag}.${describe.distance}-SNAPSHOT'
        }
        rev {
            version = '${describe.tag}-${commit.short}-SNAPSHOT'
        }
    }
}
println('Version: ' + version)

repositories {
    mavenCentral()
}

dependencies {
    implementation localGroovy()

    implementation 'com.cloudbees:diff4j:1.2'
    implementation 'io.sigpipe:jbsdiff:1.0'
}

license {
    header file('HEADER.txt')
}

gradlePlugin {
    plugins {
        propatcherPlugin {
            id = 'uk.jamierocks.propatcher'
            displayName = 'propatcher'
            description = project.description
            implementationClass = 'uk.jamierocks.propatcher.ProPatcherPlugin'
        }
    }
}

publishing {
    repositories {
        maven {
            name = "minecraftplus"
            url = "https://maven.minecraftplus.org"
            allowInsecureProtocol = false

            if (project.version.toString().endsWith("-SNAPSHOT")) {
                url = url.toString().concat("/snapshots")
            } else {
                url = url.toString().concat("/releases")
            }

            // To know how use credentials see https://docs.gradle.org/current/samples/sample_publishing_credentials.html
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
    }
}
